server:
  port: 6666

qmframework:
  # ※※※※※※※※※通讯配置※※※※※※※※※
  transmit:
    # 请求数据时，最外层的key名(rest风格)
    request-key: 'value'
    # 返回数据时，最外层的key名(rest风格)
    response-key: 'value'
    # 返回数据时，默认message的语言 EN/CN
    response-message-lang: EN
  # ※※※※※※※※※AES加密配置※※※※※※※※※
  aes:
    # 是否启用AES对称加密传输
    start: false
    # AES秘钥
    key: 'ohiah2019sDShdieub51h8910s'
    # 加密次数
    number: 1
    # 统一使用的编码方式
    encoding: 'UTF-8'
  # ※※※※※※※※※版本控制配置※※※※※※※※※
  version:
    # 是否开启版本控制(ture时,每个请求需在header带上version参数)
    start: false
    # 系统目前版本编号
    now: '0.0.3'
    # 系统容忍请求版本编号(默认允许当前版本)
    allows:
      - '0.0.2'
      - '0.0.1'

mybatis:
  # 指定实体类包路径
  type-aliases-package: com.starmcc.demo.framework.entity
  # 指定QmData基础Maapper路径
  # 框架内部的Mapper文件存放路径：classpath:com/starmcc/qmdata/mapper/*.xml
  # 建议使用classpath*:**/*Mapper.xml
  # 可扫描整个项目中带有Mapper.xml结尾的文件
  mapper-locations:
    - 'classpath*:**/*Mapper.xml'
  configuration:
    #是否启动数据库下划线自动映射实体
    map-underscore-to-camel-case: true
    # resultMap 自动映射级别设置
    auto-mapping-behavior: full

spring:
  redis:
    database: 0 # Redis数据库索引（默认为0）
    host: 'localhost' # Redis服务器地址
    port: 6379 # Redis服务器连接端口
    password: '' # Redis服务器连接密码（默认为空）
    pool:
      max-active: 200 # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 10 # 连接池中的最大空闲连接
      min-idle: 0 # 连接池中的最小空闲连接
    timeout: 1000 # 连接超时时间（毫秒）
  datasource:
    druid:
      driver-class-name: 'com.mysql.cj.jdbc.Driver'
      url: 'jdbc:mysql://localhost:3306/test'
      username: 'root'
      password: '123456'
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: 'stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny:
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456

# pageHelper Mybatis分页助手配置
pagehelper:
  # 指定数据库，不指定的话会默认自动检测数据库类型
  helper-dialect: mysql
  # 是否启用分页合理化。
  # 如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；
  # 不启用的，以上两种情况都会返回空数据
  reasonable: true
  # 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  support-methods-arguments: false
  # 用于从对象中根据属性名取值，
  # 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  # 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  param: count=countSql